{"version":3,"sources":["components/Stopwatch.js","components/Countdown.js","App.js","index.js"],"names":["Stopwatch","state","timerOn","timerStart","timerTime","startTimer","_this","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","this","centiseconds","Math","floor","slice","seconds","minutes","hours","react_default","a","createElement","className","onClick","Component","Countdown","newTime","alert","adjustTimer","input","_this$state","_this2","_this$state2","App","components_Stopwatch","components_Countdown","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.231d7626.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime\r\n    });\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        timerTime: Date.now() - this.state.timerStart\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    this.setState({ timerOn: false });\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      timerStart: 0,\r\n      timerTime: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { timerTime } = this.state;\r\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n    return (\r\n      <div className=\"Stopwatch\">\r\n        <div className=\"Stopwatch-header\">Stopwatch</div>\r\n        <div className=\"Stopwatch-display\">\r\n          {hours} : {minutes} : {seconds} : {centiseconds}\r\n        </div>\r\n        {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n          <button onClick={this.startTimer}>Start</button>\r\n        )}\r\n        {this.state.timerOn === true && (\r\n          <button onClick={this.stopTimer}>Stop</button>\r\n        )}\r\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n          <button onClick={this.startTimer}>Resume</button>\r\n        )}\r\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n          <button onClick={this.resetTimer}>Reset</button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass Countdown extends Component {\r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: this.state.timerTime\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 10;\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        this.setState({ timerOn: false });\r\n        alert(\"Countdown ended\");\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({ timerOn: false });\r\n  };\r\n  resetTimer = () => {\r\n    if (this.state.timerOn === false) {\r\n      this.setState({\r\n        timerTime: this.state.timerStart\r\n      });\r\n    }\r\n  };\r\n\r\n  adjustTimer = input => {\r\n    const { timerTime, timerOn } = this.state;\r\n    if (!timerOn) {\r\n      if (input === \"incHours\" && timerTime + 3600000 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 3600000 });\r\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 3600000 });\r\n      } else if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 60000 });\r\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 60000 });\r\n      } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\r\n        this.setState({ timerTime: timerTime + 1000 });\r\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1000 });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { timerTime, timerStart, timerOn } = this.state;\r\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Countdown\">\r\n        <div className=\"Countdown-header\">Countdown</div>\r\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\r\n        <div className=\"Countdown-display\">\r\n          <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\r\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>\r\n            &#8679;\r\n          </button>\r\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>\r\n            &#8679;\r\n          </button>\r\n\r\n          <div className=\"Countdown-time\">\r\n            {hours} : {minutes} : {seconds}\r\n          </div>\r\n\r\n          <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\r\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>\r\n            &#8681;\r\n          </button>\r\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>\r\n            &#8681;\r\n          </button>\r\n        </div>\r\n\r\n        {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\r\n          <button className=\"Button-start\" onClick={this.startTimer}>\r\n            Start\r\n          </button>\r\n        )}\r\n        {timerOn === true && timerTime >= 1000 && (\r\n          <button className=\"Button-stop\" onClick={this.stopTimer}>\r\n            Stop\r\n          </button>\r\n        )}\r\n        {timerOn === false &&\r\n          (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\r\n            <button className=\"Button-start\" onClick={this.startTimer}>\r\n              Resume\r\n            </button>\r\n          )}\r\n\r\n        {(timerOn === false || timerTime < 1000) &&\r\n          (timerStart !== timerTime && timerStart > 0) && (\r\n            <button className=\"Button-reset\" onClick={this.resetTimer}>\r\n              Reset\r\n            </button>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import React, { Component } from \"react\";\n\nimport Stopwatch from \"./components/Stopwatch\";\nimport Countdown from \"./components/Countdown\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-title\">Timers Demo</div>\n        <div className=\"Timers\">\n          <Stopwatch />\n          <Countdown />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}